cmake_minimum_required(VERSION 2.8)
set (CMAKE_ECLIPSE_VERSION 4.5.1)         
SET(CMAKE_C_FLAGS "-Wall -g" CACHE STRING "C Flags." FORCE)

# Options
option(COVERAGE "Enable code coverage" OFF)
option(GPROF "Enable gprof" OFF)

if (COVERAGE)
    add_definitions(--coverage)    
endif()

if (GPROF)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pg" CACHE STRING "C Flags." FORCE)
endif()


set(CMAKE_C_OUTPUT_EXTENSION_REPLACE 1) 

#--------------------------------------------------------------------------------------------------#
 
project(Service_Scheduler) 

#--------------------------------------------------------------------------------------------------#
set (SRCS 
	../../01_HighLevel/Service_Scheduler/src/Service_Scheduler.c
	../../02_Middleware/Library_StdLib/src/Library_StdLib.c 
	../../01_HighLevel/Service_Lidar/src/Service_Lidar.c
)

set (TI_SRCS  
	./test/TI_Service_Scheduler.c
)   

set (TV_SRCS 
	./test/TV_Service_Scheduler.c
)     


include_directories (
	../../02_Middleware/Library_StdLib/inc 
	./inc  
	../../01_HighLevel/Service_Lidar/inc 
	../../01_HighLevel/Service_Configuration/inc 
	../../01_HighLevel/Service_Initialization/inc 
	../../01_HighLevel/Service_ErrorReport/inc 
	../../03_Driver/Driver_TcpSocketDriver/inc   
	../../02_Middleware/Library_LibLidarLms151/inc  
)   
 
add_subdirectory(../../02_Middleware Build_Middleware)
add_subdirectory(../../03_Driver Build_Driver)   

#--------------------------------------------------------------------------------------------------#
add_executable(TV_Scheduler ${TV_SRCS} ${SRCS}) 

target_link_libraries(TV_Scheduler 
					${CMAKE_THREAD_LIBS_INIT}
					Lib_LibLidarLms151 
					Lib_StdLib
					m )     

#--------------------------------------------------------------------------------------------------#

# add a target to generate API documentation with Doxygen
find_package(Doxygen)
if(DOXYGEN_FOUND)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
add_custom_target(docScheduler
${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
COMMENT "Generating API documentation with Doxygen" VERBATIM
)
endif(DOXYGEN_FOUND)

#--------------------------------------------------------------------------------------------------#
